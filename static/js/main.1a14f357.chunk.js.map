{"version":3,"sources":["assets/blood_donation1.svg","SmartContractConfig.js","util/Util.js","Pages/Home.js","Pages/About.js","Components/NavItem.js","Pages/Navigations.js","assets/blood_donation2.svg","Pages/BloodRegistration.js","Pages/Developer.js","assets/agency_doctor.svg","Pages/AddAgency.js","Pages/AddHealthCare.js","assets/dashboard.svg","Pages/Dashboard.js","Pages/Deliver.js","Components/Table.js","Pages/Collection.js","Components/DistributionTable.js","Pages/Distribution.js","App.js","reportWebVitals.js","index.js"],"names":["BLOOD_BANK_ADDRESS","BLOOD_BANK_ABI","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","components","CONTRACT_OWNER","BloodGroups","status","getBlooodGroup","num","useStyles","makeStyles","theme","root","padding","display","alignItems","width","marginTop","input","marginLeft","spacing","flex","iconButton","container","flexDirection","margin","leftDiv","justifyContent","rightDiv","height","heading","color","details","card","minWidth","bullet","transform","title","fontSize","pos","marginBottom","Home","account","classes","React","useState","bottleId","setBottleId","error","setError","bloodDetails","setBloodDetails","message","setMessage","console","log","className","Paper","InputBase","placeholder","inputProps","onChange","e","currentTarget","value","IconButton","aria-label","onClick","isNaN","bloodBankContract","window","web3","eth","Contract","defaultAccount","methods","getbloodBottleData","call","then","blockBloodDetails","catch","getBloodDetails","Alert","style","severity","Card","CardContent","Typography","variant","component","BloodBottleId","utils","toAscii","DonerName","DonerAge","DonerMedicalDetails","DonerContactNo","BloodGroup","Quality","Remarks","Status","src","LogoImage","txt","fontWeight","textAlign","About","menusItem","cursor","scale","NavItem","path","onClickMenu","menus","Navigations","isOwner","navigateToPath","location","process","alignContent","marginRight","BloodRegistration","donarName","setDonarName","donarPhone","setDonarPhone","bloodGroup","setBloodGroup","bloodQuality","setQloodQuality","remarks","setRemarks","medicalDetails","setMedicalDetails","age","setage","isValid","length","alt","autoComplete","TextField","required","id","label","FormControl","formControl","InputLabel","Select","labelId","target","MenuItem","Button","disabled","publishDate","Date","toLocaleDateString","fromAscii","_bloodQuality","_remarks","_donarName","_medicalDetails","AddBloodDetails","send","from","res","events","BloodBottleID","raw","data","hexToNumberString","setTimeout","regiterBlood","Developer","minHeight","AddAgency","agencyType","setAgencyType","agencyName","setAgencyName","addressID","setAddressID","contact_Person","setContact_Person","contact_No","setContact_No","address_Line1","setAddress_Line1","pincode","setPincode","agencyData","setAgencyData","showAddAgency","setShowAddAgency","isAddress","useEffect","loadAgencyDetails","acc","a","getAgencyData","addAgency","addAgencyToBlockChain","contactPerson","contactNo","agencyAddress","CardActions","AddHealthCare","addHealthCareAgency","left","right","imgSVG","Dashboard","stats","setStats","loadStats","bloods","i","count","push","totalSupply","TotalNoOfAgencies","totalAgency","map","item","index","DashBoardSVG","Deliver","params","useParams","PatientName","setPatientName","PatientAge","setPatientAge","PatientMedicalDetails","setPatientMedicalDetails","PatientContactNo","setPatientContactNo","Doctor","setDoctor","agnecyIndex","setAgencyIndex","healthCares","setHealthCares","getHealthCareList","HealthCareAgencyList","bd_data","filter","bd","hd","DeliverBloodBottle","gp","markDeliverInBlock","table","BasicTable","verifyBottle","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","Donar","md","ph","agency","created","group","page","Collection","setPage","setData","loadData","BloodBottleList","DateCreated","verifyBloodBottle","NoBottlesDemanded","Distribution","App","setAccount","ethEnabled","ethereum","Web3","getAccounts","accounts","alert","background","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a14f357.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blood_donation1.3b79b00a.svg\";","export const BLOOD_BANK_ADDRESS = \"0x3e4523d8ca44c098A8a8fd1e1d6C6416944c5D58\";\r\n\r\nexport const BLOOD_BANK_ABI = [\r\n  {\r\n    inputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BloodBottleID\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BloodBottleStatusEvent\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BloodBottleVerifiedEvent\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodGroup\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_Quality\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_Remarks\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DonerName\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_DonerAge\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DonerMedicalDetails\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_DonerContactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DateCreated\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DateUpdated\",\r\n        type: \"bytes32\",\r\n      },\r\n    ],\r\n    name: \"AddBloodDetails\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BloodBottleIdNo\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"start\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BloodBottleList\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"BloodGroup\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"Quality\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"Remarks\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DonerName\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"DonerAge\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DonerMedicalDetails\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"DonerContactNo\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"BloodBottleId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"enum BloodBank2.BloodBottleStatus\",\r\n            name: \"Status\",\r\n            type: \"uint8\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DateCreated\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DateUpdated\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"agency\",\r\n            type: \"address\",\r\n          },\r\n        ],\r\n        internalType: \"struct BloodBank2.BloodBottle[10]\",\r\n        name: \"temp\",\r\n        type: \"tuple[10]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodBottleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodGroup\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_Remarks\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_PatientName\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_PatientAge\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_PatientMedicalDetails\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_PatientContactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_doctorDetails\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DateDemanded\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"_DateProvided\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_healthCareAgencyindex\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"DeliverBloodBottle\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodGroup\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"GetBloodBottleGroupTotal\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"a\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"start\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"HealthCareAgencyList\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyType\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyName\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"contactPerson\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"contactNo\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyAddress\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"pincode\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"NoBottlesDemanded\",\r\n            type: \"uint256\",\r\n          },\r\n        ],\r\n        internalType: \"struct BloodBank2.HealthCareAgency[50]\",\r\n        name: \"temp\",\r\n        type: \"tuple[50]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"TotalNoOfAgencies\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"TotalNoOfHealthCareAgencies\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyType\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_addressID\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_contactPerson\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_contactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyAddress\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_pincode\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"addAgency\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyType\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_contactPerson\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_contactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_agencyAddress\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_pincode\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"addHealthCareAgency\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"agencyCollection\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyType\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"addressID\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"contactPerson\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"contactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyAddress\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"pincode\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"bloodCollection\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"BloodGroup\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"Quality\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"Remarks\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"DonerName\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"DonerAge\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"DonerMedicalDetails\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"DonerContactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"BloodBottleId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"enum BloodBank2.BloodBottleStatus\",\r\n        name: \"Status\",\r\n        type: \"uint8\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"DateCreated\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"bytes32\",\r\n        name: \"DateUpdated\",\r\n        type: \"bytes32\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"agency\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"enum BloodBank2.BloodGroup\",\r\n        name: \"\",\r\n        type: \"uint8\",\r\n      },\r\n    ],\r\n    name: \"bloodGroup\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_addressID\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"getAgencyData\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyType\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyName\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"addressID\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"contactPerson\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"contactNo\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"agencyAddress\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"pincode\",\r\n            type: \"uint256\",\r\n          },\r\n        ],\r\n        internalType: \"struct BloodBank2.Agency\",\r\n        name: \"agency\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodBottleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getbloodBottleData\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"BloodGroup\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"Quality\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"Remarks\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DonerName\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"DonerAge\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DonerMedicalDetails\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"DonerContactNo\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"BloodBottleId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"enum BloodBank2.BloodBottleStatus\",\r\n            name: \"Status\",\r\n            type: \"uint8\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DateCreated\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"bytes32\",\r\n            name: \"DateUpdated\",\r\n            type: \"bytes32\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"agency\",\r\n            type: \"address\",\r\n          },\r\n        ],\r\n        internalType: \"struct BloodBank2.BloodBottle\",\r\n        name: \"_bloodBottle\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"healthCareAgency\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyType\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"contactPerson\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"contactNo\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"agencyAddress\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"pincode\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"NoBottlesDemanded\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_BloodBottleId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"verifyBloodBottle\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport const CONTRACT_OWNER = \"0x1142F4720cE7CCDA94E3aa2FD563Af2A371110Cd\";\r\n","const BloodGroups = [\r\n  \"OPositive\",\r\n  \"ONegative\",\r\n  \"APositive\",\r\n  \"ANegative\",\r\n  \"BPositive\",\r\n  \"BNegative\",\r\n  \"ABPositive\",\r\n  \"ABNegative\",\r\n];\r\nconst status = [\"Collected\", \"Verified\", \"Delivered\"];\r\nexport const getBlooodGroup = (num) => {\r\n  num = num % 8;\r\n  return BloodGroups[num];\r\n};\r\nexport const getBloodStatus = (num) => {\r\n  num = num % 3;\r\n  return status[num];\r\n};\r\n","import React from 'react';\r\nimport LogoImage from '../assets/blood_donation1.svg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI} from '../SmartContractConfig.js'\r\nimport {getBlooodGroup} from '../util/Util';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n      marginTop: 50\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    container : {display : 'flex', flexDirection: 'row', margin: 20, padding: 20, width: '100%'},\r\n    leftDiv :  { display: 'flex', flexDirection: 'column', alignItems : 'center', justifyContent: 'flex-start', width : '40%'},\r\n    rightDiv : { width : '60%' , height : '100%'},\r\n    heading : {margin : 2, color: 'white'},\r\n    details : {color : 'white'},\r\n    card: {\r\n        minWidth: 500,\r\n        marginTop: 30\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n  }));\r\n\r\nconst Home = ({account}) => {\r\n\r\n    const classes = useStyles();\r\n    const [bottleId, setBottleId] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    const [bloodDetails, setBloodDetails] = React.useState();\r\n    const [message,setMessage] = React.useState('');\r\n\r\n\r\n    // {\r\n    //     BloodBottleId : 125,\r\n    //     DonerName : 'Shuvendu Dhal',\r\n    //     DonerAge : 25,\r\n    //     DonerMedicalDetails : 'Very Good',\r\n    //     DonerContactNo : '8158090295',\r\n    //     BloodGroup : 'O+',\r\n    //     Quality : 'Good',\r\n    //     Remarks : 'Very Very Good'\r\n    // }\r\n\r\n    console.log('Account Home : ', account);\r\n    //get blood details\r\n    const getBloodDetails = (bottleId) => {\r\n        console.log('Getting blood details' , bottleId)\r\n        if(bottleId != null && !isNaN(bottleId)){\r\n            setBloodDetails(null);\r\n            setError(null);\r\n            setMessage('')\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.getbloodBottleData(bottleId)\r\n            .call()\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails(blockBloodDetails);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n    const verifyBottle = (bottleId) => {\r\n        console.log('Verifying blood details' , bottleId)\r\n        if(bottleId != null){\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.verifyBloodBottle(bottleId)\r\n            .send({\r\n                from: account\r\n            })\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails({...bloodDetails, Status : '1'})\r\n                setMessage(\"Blood Bottle Verified!\")\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n    const markDeliveredBottle = (bottleId) => {\r\n        console.log('Delivering blood details' , bottleId)\r\n        if(bottleId != null){\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.DeliverBloodBottle(bottleId)\r\n            .send({\r\n                from: account\r\n            })\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails({...bloodDetails, Status : '2'})\r\n                setMessage(\"Blood Bottle Marked Delivered!\")\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.leftDiv}>\r\n                <h2 className={classes.heading}>Blood Bank</h2>\r\n                <p className={classes.details}>New Generations Blood Bank powered by decentralize blockchain solution. Build on Ethereum Network. Blood Collection to Blood Verification, Distribution all done with fully decentralized system. </p>\r\n                <Paper  className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search Blood Details With Blood Id\"\r\n                        inputProps={{ 'aria-label': 'Search Blood Details With Blood Id' }}\r\n                        onChange={e => setBottleId(e.currentTarget.value)}\r\n                    />\r\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick={() => getBloodDetails(bottleId)}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n\r\n                {error && <p>{error}</p>}\r\n                {message && <Alert style={{margin: 10}} severity=\"success\">{message}</Alert>}\r\n                            {bloodDetails && <Card className={classes.card}>\r\n                                    <CardContent>\r\n                                        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Word of the Day\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Blood Id : {bloodDetails.BloodBottleId}\r\n                                        </Typography>\r\n                                        {/* <Typography color=\"textSecondary\">\r\n                                        adjective\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                        Doner Name : {window.web3.utils.toAscii(bloodDetails.DonerName)}\r\n                                        <br />\r\n                                        Age : {bloodDetails.DonerAge}\r\n                                        <br />\r\n                                        Medical Details : {window.web3.utils.toAscii(bloodDetails.DonerMedicalDetails)}\r\n                                        <br />\r\n                                        Phone Number : {bloodDetails.DonerContactNo}\r\n                                        <br />\r\n                                        Blood Group : {getBlooodGroup(bloodDetails.BloodGroup)}\r\n                                        <br />\r\n                                        Blood Quality : {window.web3.utils.toAscii(bloodDetails.Quality)}\r\n                                        <br />\r\n                                        Remarks : {window.web3.utils.toAscii(bloodDetails.Remarks)}\r\n                                        <br />\r\n                                        Status : {bloodDetails.Status === '1' ? 'Verified' : bloodDetails.Status === '2' ? 'Delivered' : 'New'}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    {/* <CardActions>\r\n                                        {bloodDetails.Status === '0' ? <Button onClick={() => verifyBottle(bottleId)}>Verify</Button> : bloodDetails.Status === '1' ? <Button onClick={() => markDeliveredBottle(bottleId)}>Mark Delivered</Button> : null}\r\n                                    </CardActions> */}\r\n                </Card>}\r\n            </div>\r\n            <div  className={classes.rightDiv}>\r\n                <img src={LogoImage} width='100%' height='100%' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n        margin: 'auto',\r\n        padding: 20\r\n    },\r\n    txt : {\r\n        color: 'white',\r\n        fontSize: '1.2rem',\r\n        fontWeight: 400,\r\n        textAlign : 'left'\r\n    }\r\n  }));\r\n\r\nconst About = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n        className={classes.root}\r\n        >\r\n            <p className={classes.txt}>\r\n            There are many factors that lead to blood scarcity due to the gap between demand and\r\n            supply. There are many issues such as reluctances to donate blood, lack of awareness of\r\n            people, paid donation is banned etc. According to the article published by Lancet Journal\r\n            their data suggests that the gap between need and supply is large in many low-income and\r\n            middle-income countries, also the WHO target of 10–20 donations per 1000 population for\r\n            many countries is an underestimate. In order to make blood available there is a need for\r\n            more infrastructural support, in terms of financially, to ensure supply, quality, and safety in\r\n            low-income and middle-income countries. Also due to mishandling donated blood is wasted\r\n            –like reactivity for infections, expiry, bacterial contamination, not meeting quality standards\r\n            etc. According to a report more than 1 million units of collected blood has been discarded in\r\n            each of the years 2014-15, 2015-16 and 2016-17 due to wastage and improper handling. <br /> <br />\r\n            In this model we propose a novel way of recording the information related to the donated\r\n            blood to a central database repository using the concept of Blockchain .The method\r\n            proposed records the agencies details who are organizing Blood Donation camps and at the\r\n            same time also gives authority the information about total blood bottles available. Demand\r\n            and supply gap can be mitigated. As the data recorded in Blockchain is immutable this will\r\n            not only help to have the consistent information but can also prevent black marketing of\r\n            donated blood. Also it removes third party monitoring as the system itself will take care of\r\n            maintaining the consistency of the information stored from the origin. <br /> <br />\r\n            A Blockchain platform-on Ethereum using Smart Contract is proposed here which is an open\r\n            source platform. It uses smart contracts written in Solidity.<br /> <br />\r\n            A digital account will be created for each interactor /agency/hospital./medical care centre .At\r\n            present any health care system requiring the Blood Bottles need to contact the agencies\r\n            organizing the Blood donation camps or can approach directly to the blood Bank to deliver\r\n            bottles.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menusItem: {\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n    \"&:hover\": {\r\n      color: \"#f5f5f5\",\r\n      scale: 1.02,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavItem = ({ name, path, onClickMenu }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.menusItem} onClick={() => onClickMenu(path)}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport NavItem from \"../Components/NavItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menus: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    margin: 10,\r\n    width: 600,\r\n    alignItems: \"end\",\r\n  },\r\n}));\r\n\r\nconst Navigations = ({ isOwner = false }) => {\r\n  const classes = useStyles();\r\n\r\n  const navigateToPath = (path) => {\r\n    // if(path === '/about'){\r\n    //     window.location = 'https://github.com/shuvenduoffline'\r\n    // }else{\r\n    // }\r\n    window.location = process.env.PUBLIC_URL + \"/#\" + path;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.menus}>\r\n      <NavItem name={\"Home\"} onClickMenu={navigateToPath} path={\"/\"} />\r\n      <NavItem\r\n        name={\"Blood Registration\"}\r\n        onClickMenu={navigateToPath}\r\n        path={\"/registration\"}\r\n      />\r\n      {isOwner && (\r\n        <NavItem\r\n          name={\"Collection\"}\r\n          onClickMenu={navigateToPath}\r\n          path={\"/collection\"}\r\n        />\r\n      )}\r\n      <NavItem\r\n        name={\"Agency\"}\r\n        onClickMenu={navigateToPath}\r\n        path={\"/addagency\"}\r\n      />\r\n\r\n      {isOwner && (\r\n        <NavItem\r\n          name={\"Distribution\"}\r\n          onClickMenu={navigateToPath}\r\n          path={\"/distribution\"}\r\n        />\r\n      )}\r\n      <NavItem\r\n        name={\"Statistics\"}\r\n        onClickMenu={navigateToPath}\r\n        path={\"/stats\"}\r\n      />\r\n\r\n      <NavItem name={\"About Us\"} onClickMenu={navigateToPath} path={\"/about\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigations;\r\n","export default __webpack_public_path__ + \"static/media/blood_donation2.841028d5.svg\";","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LogoImage from \"../assets/blood_donation2.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BLOOD_BANK_ADDRESS, BLOOD_BANK_ABI } from \"../SmartContractConfig.js\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  leftDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"90vh\",\r\n  },\r\n  rightDiv: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    justifyContent: \"space-between\",\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nconst BloodRegistration = ({ account }) => {\r\n  const classes = useStyles();\r\n  const [donarName, setDonarName] = useState(\"\");\r\n  const [donarPhone, setDonarPhone] = useState(\"\");\r\n  const [bloodGroup, setBloodGroup] = useState(0);\r\n  const [bloodQuality, setQloodQuality] = useState(\"\");\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const [medicalDetails, setMedicalDetails] = useState(\"\");\r\n  const [age, setage] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const isValid =\r\n    donarName &&\r\n    donarPhone &&\r\n    bloodGroup > -1 &&\r\n    bloodGroup < 8 &&\r\n    bloodQuality &&\r\n    remarks &&\r\n    medicalDetails &&\r\n    age &&\r\n    donarName.length > 2 &&\r\n    !isNaN(donarPhone) &&\r\n    donarPhone.length === 10 &&\r\n    !isNaN(age);\r\n\r\n  const regiterBlood = () => {\r\n    if (isValid) {\r\n      let publishDate = new Date().toLocaleDateString(); //web3.utils.fromAscii(docName)\r\n      //convert to better use\r\n      publishDate = window.web3.utils.fromAscii(publishDate);\r\n\r\n      const _bloodQuality = window.web3.utils.fromAscii(bloodQuality);\r\n      const _remarks = window.web3.utils.fromAscii(remarks);\r\n      const _donarName = window.web3.utils.fromAscii(donarName);\r\n      const _medicalDetails = window.web3.utils.fromAscii(medicalDetails);\r\n\r\n      console.log(\"Adding Blood\");\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n      bloodBankContract.defaultAccount = account;\r\n\r\n      try {\r\n        bloodBankContract.methods\r\n          .AddBloodDetails(\r\n            bloodGroup,\r\n            _bloodQuality,\r\n            _remarks,\r\n            _donarName,\r\n            age,\r\n            _medicalDetails,\r\n            donarPhone,\r\n            publishDate,\r\n            publishDate\r\n          )\r\n          .send({\r\n            from: account,\r\n          })\r\n          .then((res) => res?.events?.BloodBottleID?.raw?.data)\r\n          .then((id) => {\r\n            console.log(\"Id : \" + id);\r\n            setMessage(\r\n              \"Blood Registered Successfully!\\nBlood ID : \" +\r\n                window.web3.utils.hexToNumberString(id)\r\n            );\r\n          });\r\n\r\n        //\r\n\r\n        setTimeout(() => {\r\n          //window.location = process.env.PUBLIC_URL + \"/#\" + \"/\";\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(\"Blood Bottle Group : \" + bloodGroup);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.leftDiv}>\r\n        <img\r\n          src={LogoImage}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          alt=\"Blood Donation Pic\"\r\n        />\r\n      </div>\r\n      <div className={classes.rightDiv}>\r\n        {message && (\r\n          <Alert style={{ margin: 10 }} severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        <form className={classes.rightDiv} autoComplete=\"off\">\r\n          <TextField\r\n            required\r\n            id=\"name\"\r\n            label=\"Donar Name\"\r\n            variant=\"outlined\"\r\n            value={donarName}\r\n            onChange={(e) => setDonarName(e.currentTarget.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            id=\"phone\"\r\n            label=\"Phone Number\"\r\n            variant=\"outlined\"\r\n            value={donarPhone}\r\n            onChange={(e) => setDonarPhone(e.currentTarget.value)}\r\n          />\r\n          {/* <TextField\r\n                        required\r\n                        id=\"bloodgroup\"\r\n                        label=\"Blood Group\"\r\n                        variant=\"outlined\"\r\n                        value={bloodGroup}\r\n                        onChange={e => setBloodGroup(e.currentTarget.value)}\r\n                    /> */}\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Blood Group\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={bloodGroup}\r\n              onChange={(e) => {\r\n                console.log(e);\r\n                setBloodGroup(e.target.value);\r\n              }}\r\n              label=\"Blood Group\"\r\n            >\r\n              <MenuItem value={0}>OPositive</MenuItem>\r\n              <MenuItem value={1}>ONegative</MenuItem>\r\n              <MenuItem value={2}>APositive</MenuItem>\r\n              <MenuItem value={3}>ANegative</MenuItem>\r\n              <MenuItem value={4}>BPositive</MenuItem>\r\n              <MenuItem value={5}>BNegative</MenuItem>\r\n              <MenuItem value={6}>ABPositive</MenuItem>\r\n              <MenuItem value={7}>ABNegative</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            required\r\n            id=\"quality\"\r\n            label=\"Blood Quality\"\r\n            variant=\"outlined\"\r\n            value={bloodQuality}\r\n            onChange={(e) => setQloodQuality(e.currentTarget.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            id=\"medical\"\r\n            label=\"Medical Details\"\r\n            variant=\"outlined\"\r\n            value={medicalDetails}\r\n            onChange={(e) => setMedicalDetails(e.currentTarget.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            id=\"age\"\r\n            label=\"Age\"\r\n            variant=\"outlined\"\r\n            value={age}\r\n            onChange={(e) => setage(e.currentTarget.value)}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"remarks\"\r\n            label=\"Remarks\"\r\n            variant=\"outlined\"\r\n            value={remarks}\r\n            onChange={(e) => setRemarks(e.currentTarget.value)}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!isValid}\r\n            onClick={() => regiterBlood()}\r\n          >\r\n            Register Blood\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BloodRegistration;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 10,\r\n        width: 500,\r\n        alignItems: 'end'\r\n    }\r\n  }));\r\n\r\nconst Developer = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n        className={classes.root}\r\n        >\r\n           Developer\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Developer;\r\n","export default __webpack_public_path__ + \"static/media/agency_doctor.4097dc4b.svg\";","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LogoImage from '../assets/agency_doctor.svg'\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI, CONTRACT_OWNER} from '../SmartContractConfig.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 20\r\n      },\r\n      leftDiv : {\r\n         width: '100%',\r\n         alignItems : 'center',\r\n         height: '90vh',\r\n      },\r\n      rightDiv : {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        justifyContent: 'space-between',\r\n        height: '80vh'\r\n      },\r\n      card: {\r\n        minWidth: 500,\r\n        marginTop: 30,\r\n        minHeight: 250\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n  }));\r\n\r\nconst AddAgency = ({account}) => {\r\n\r\n    // agency.agencyType=_agencyType;\r\n    // agency.agencyName = _agencyName;\r\n    // agency.addressID = _addressID;\r\n    // agency.contact_Person = _contact_Person;\r\n    // agency.contact_No = _contact_No;\r\n    // agency.address_Line1 = _address_Line1;\r\n    // agency.address_Line2 =_address_Line2;\r\n    // agency.pincode =_pincode;\r\n\r\n    const classes = useStyles();\r\n    const [agencyType,setAgencyType] = useState('')\r\n    const [agencyName,setAgencyName] = useState('')\r\n    const [addressID,setAddressID] = useState('')\r\n    const [contact_Person,setContact_Person] = useState('')\r\n    const [contact_No,setContact_No] = useState('')\r\n    const [address_Line1,setAddress_Line1] = useState('')\r\n    const [pincode,setPincode] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    const [agencyData,setAgencyData] = useState('')\r\n    const [showAddAgency,setShowAddAgency] = useState(false)\r\n\r\n\r\n\r\n    const isValid = agencyType && agencyName && addressID && contact_Person && contact_No && address_Line1 && pincode\r\n    && agencyType.length > 2 && agencyName.length > 2 && addressID.length > 5 && contact_Person.length > 2 && !isNaN(contact_No)\r\n    && contact_No.length === 10 && address_Line1.length > 2 && !isNaN(pincode) && pincode.length === 6 && window.web3 && window.web3.utils.isAddress(addressID)\r\n\r\n    \r\n\r\n    const addAgencyToBlockChain = () => {\r\n       if(isValid){        \r\n        //    let publishDate = new Date().toLocaleDateString(); //web3.utils.fromAscii(docName)\r\n        // //convert to better use\r\n        // publishDate = window.web3.utils.fromAscii(publishDate);\r\n        // const _bloodGroup = window.web3.utils.fromAscii(bloodG);\r\n        // const doc_id = window.web3.utils.fromAscii(docID);\r\n        console.log(\"Adding Agecy\");\r\n        const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n        bloodBankContract.defaultAccount = account;\r\n\r\n        try{\r\n            bloodBankContract.methods.addAgency(\r\n                agencyType,\r\n                agencyName,\r\n                addressID,\r\n                contact_Person,\r\n                contact_No,\r\n                address_Line1,\r\n                pincode\r\n            )\r\n            .send({\r\n                from: account\r\n            })\r\n\r\n            setMessage('Added Agency Details Successfully!\\nView it on Etherscan!');\r\n\r\n            setTimeout(()=> {\r\n                window.location = process.env.PUBLIC_URL + '/#' + '/';\r\n            },2000)\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n       }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        loadAgencyDetails(account)\r\n    },[account])\r\n\r\n    const loadAgencyDetails =async (acc) => {\r\n        console.log('Acc : '+acc)\r\n        if(acc){\r\n            try{\r\n                const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n                bloodBankContract.defaultAccount = acc;\r\n                bloodBankContract.methods.getAgencyData(\r\n                   acc\r\n                )\r\n                .call()\r\n                .then(agencyData => {\r\n                    console.log(agencyData)\r\n                   setAgencyData(agencyData)\r\n                })\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className={classes.root}\r\n        >\r\n           <div className={classes.leftDiv}>\r\n            <img src={LogoImage} width='60%' height='60%' alt='Blood Donation Pic' style={{marginTop : 30}} />\r\n           </div>\r\n           <div className={classes.rightDiv}>\r\n           {message && <Alert style={{margin: 10}} severity=\"success\">{message}</Alert>}\r\n           {account === CONTRACT_OWNER && showAddAgency ? <form className={classes.rightDiv} autoComplete=\"off\">\r\n               \r\n                    <TextField\r\n                        required\r\n                        id=\"name\"\r\n                        label=\"Agency Name\"\r\n                        variant=\"outlined\"\r\n                        value={agencyName}\r\n                        onChange={e => setAgencyName(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agencytype\"\r\n                        label=\"Agency Type\"\r\n                        variant=\"outlined\"\r\n                        value={agencyType}\r\n                        onChange={e => setAgencyType(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_address\"\r\n                        label=\"Agency Address\"\r\n                        variant=\"outlined\"\r\n                        value={addressID}\r\n                        onChange={e => setAddressID(e.currentTarget.value)}\r\n                    />\r\n                    {addressID && window.web3 && !window.web3.utils.isAddress(addressID) &&  <p>Not a valid address!</p>}\r\n                    <TextField\r\n                        required\r\n                        id=\"contact_person\"\r\n                        label=\"Contact Person\"\r\n                        variant=\"outlined\"\r\n                        value={contact_Person}\r\n                        onChange={e => setContact_Person(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"contact_number\"\r\n                        label=\"Contact Number\"\r\n                        variant=\"outlined\"\r\n                        value={contact_No}\r\n                        onChange={e => setContact_No(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_address\"\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n                        value={address_Line1}\r\n                        onChange={e => setAddress_Line1(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_pincode\"\r\n                        label=\"Pincode\"\r\n                        variant=\"outlined\"\r\n                        value={pincode}\r\n                        onChange={e => setPincode(e.currentTarget.value)}\r\n                    />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" disabled={!isValid} onClick={() => addAgencyToBlockChain()}>\r\n                Add Agency\r\n            </Button>\r\n            </form> : <Card className={classes.card}>\r\n                                    <CardContent>\r\n                                        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Word of the Day\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Agency Name : {agencyData.agencyName}\r\n                                        </Typography>\r\n                                       \r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                        Agency Type : {agencyData.agencyType}\r\n                                        <br />\r\n                                        Address  : {agencyData.addressID}\r\n                                        <br />\r\n                                        Contact Person : {agencyData.contactPerson}\r\n                                        <br />\r\n                                        Contact Number : {agencyData.contactNo}\r\n                                        <br />\r\n                                        Agency Address : {agencyData.agencyAddress}\r\n                                        <br />\r\n                                        Pincode : {agencyData.pincode}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                       {account === CONTRACT_OWNER && <Button onClick={() => setShowAddAgency(true)}>Add Agency</Button> }\r\n                                    </CardActions>\r\n                </Card>}\r\n           </div>\r\n        </div>\r\n    );\r\n\r\n//     addressID: \"0x1142F4720cE7CCDA94E3aa2FD563Af2A371110Cd\"\r\n// ​\r\n// agencyAddress: \"Rajabazar, Kolkata\"\r\n// ​\r\n// agencyName: \"Vein Care\"\r\n// ​\r\n// agencyType: \"Blood Center\"\r\n// ​\r\n// contactNo: \"1234567899\"\r\n// ​\r\n// contactPerson: \"Shuvendu Dhal\"\r\n// ​\r\n// length: 7\r\n// ​\r\n// pincode: \"700009\"\r\n}\r\n\r\nexport default AddAgency;","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LogoImage from \"../assets/agency_doctor.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  BLOOD_BANK_ADDRESS,\r\n  BLOOD_BANK_ABI,\r\n  CONTRACT_OWNER,\r\n} from \"../SmartContractConfig.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  leftDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"90vh\",\r\n  },\r\n  rightDiv: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    justifyContent: \"space-between\",\r\n    height: \"60vh\",\r\n  },\r\n  card: {\r\n    minWidth: 500,\r\n    marginTop: 30,\r\n    minHeight: 250,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst AddHealthCare = ({ account }) => {\r\n  const classes = useStyles();\r\n\r\n  //   string agencyType;\r\n  //   string agencyName;\r\n  //   string contactPerson;\r\n  //   uint contactNo;\r\n  //   string agencyAddress;\r\n  //   uint pincode;\r\n  //   uint NoBottlesDemanded;//keeps track of total no of bottles demanded by an Agency\r\n\r\n  const [agencyType, setAgencyType] = useState(\"\");\r\n  const [agencyName, setAgencyName] = useState(\"\");\r\n  const [contact_Person, setContact_Person] = useState(\"\");\r\n  const [contact_No, setContact_No] = useState(\"\");\r\n  const [address_Line1, setAddress_Line1] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const isValid =\r\n    agencyType &&\r\n    agencyName &&\r\n    contact_Person &&\r\n    contact_No &&\r\n    address_Line1 &&\r\n    pincode &&\r\n    agencyType.length > 2 &&\r\n    agencyName.length > 2 &&\r\n    contact_Person.length > 2 &&\r\n    !isNaN(contact_No) &&\r\n    contact_No.length === 10 &&\r\n    address_Line1.length > 2 &&\r\n    !isNaN(pincode) &&\r\n    pincode.length === 6;\r\n\r\n  const addHealthCareAgency = () => {\r\n    if (isValid) {\r\n      console.log(\"Adding Health Care\");\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n      bloodBankContract.defaultAccount = account;\r\n\r\n      //string memory  _agencyType,string memory _agencyName,\r\n      //   string memory _contactPerson,\r\n      //   uint _contactNo,string memory _agencyAddress,uint _pincode\r\n\r\n      try {\r\n        bloodBankContract.methods\r\n          .addHealthCareAgency(\r\n            agencyType,\r\n            agencyName,\r\n            contact_Person,\r\n            contact_No,\r\n            address_Line1,\r\n            pincode\r\n          )\r\n          .send({\r\n            from: account,\r\n          })\r\n          .then((id) => {\r\n            console.log(\"Data : \" + id);\r\n            setMessage(\"Agency Registered Successfully!\");\r\n          });\r\n\r\n        setMessage(\r\n          \"Added Health Care Details Successfully!\\nView it on Etherscan!\"\r\n        );\r\n\r\n        setTimeout(() => {\r\n          window.location = process.env.PUBLIC_URL + \"/#\" + \"/\";\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.leftDiv}>\r\n        <img\r\n          src={LogoImage}\r\n          width=\"60%\"\r\n          height=\"60%\"\r\n          alt=\"Blood Donation Pic\"\r\n          style={{ marginTop: 30 }}\r\n        />\r\n      </div>\r\n      <div className={classes.rightDiv}>\r\n        {message && (\r\n          <Alert style={{ margin: 10 }} severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        {account === CONTRACT_OWNER && (\r\n          <form className={classes.rightDiv} autoComplete=\"off\">\r\n            <TextField\r\n              required\r\n              id=\"name\"\r\n              label=\"Health Care Name\"\r\n              variant=\"outlined\"\r\n              value={agencyName}\r\n              onChange={(e) => setAgencyName(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"agencytype\"\r\n              label=\"Health Care  Type\"\r\n              variant=\"outlined\"\r\n              value={agencyType}\r\n              onChange={(e) => setAgencyType(e.currentTarget.value)}\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              id=\"contact_person\"\r\n              label=\"Contact Person\"\r\n              variant=\"outlined\"\r\n              value={contact_Person}\r\n              onChange={(e) => setContact_Person(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"contact_number\"\r\n              label=\"Contact Number\"\r\n              variant=\"outlined\"\r\n              value={contact_No}\r\n              onChange={(e) => setContact_No(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"agency_address\"\r\n              label=\"Address\"\r\n              variant=\"outlined\"\r\n              value={address_Line1}\r\n              onChange={(e) => setAddress_Line1(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"agency_pincode\"\r\n              label=\"Pincode\"\r\n              variant=\"outlined\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.currentTarget.value)}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!isValid}\r\n              onClick={() => addHealthCareAgency()}\r\n            >\r\n              Add Health Care\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddHealthCare;\r\n","export default __webpack_public_path__ + \"static/media/dashboard.a8691c56.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DashBoardSVG from '../assets/dashboard.svg';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI, CONTRACT_OWNER} from '../SmartContractConfig.js'\r\nimport {getBlooodGroup} from '../util/Util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 0,\r\n        padding: 30,\r\n        alignItems: 'end',\r\n        flex: 2\r\n    },\r\n    left : {\r\n        flex : 1,\r\n        padding: 50\r\n    },\r\n    right : {\r\n        flex : 1\r\n    },\r\n    imgSVG : {\r\n        width: 600,\r\n        height: 600\r\n    },\r\n    card : {\r\n        minWidth: 500,\r\n        marginTop: 30\r\n    }\r\n  }));\r\n\r\nconst Dashboard = ({account}) => {\r\n    const classes = useStyles();\r\n\r\n    const [stats,setStats] = React.useState({})\r\n\r\n    React.useEffect(() => {\r\n        loadStats(account)\r\n    },[account])\r\n\r\n    const loadStats =async (acc) => {\r\n        console.log('Acc : '+acc)\r\n        if(acc){\r\n            try{\r\n                const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n                bloodBankContract.defaultAccount = acc;\r\n                const bloods = []\r\n                for(let i = 0; i < 8; i++){\r\n                        const count = await bloodBankContract.methods.bloodGroup(\r\n                            i\r\n                         )\r\n                         .call()\r\n                        // console.log('Type : '+ i + ' Count : '+count)\r\n                         bloods.push(count)\r\n                }\r\n                const totalSupply = await bloodBankContract.methods.totalSupply().call()\r\n\r\n                const totalAgency = await bloodBankContract.methods.TotalNoOfAgencies().call()\r\n                \r\n                setStats({ bloods, totalSupply, totalAgency})\r\n              \r\n                \r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n        className={classes.root}\r\n        >\r\n           <div className={classes.left}>\r\n           <Card className={classes.card}>\r\n                    <CardContent>  \r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Total Agency Registered\r\n                                        </Typography>\r\n                                        <Typography variant=\"h3\" component=\"h2\">\r\n                                         {stats.totalAgency}\r\n                                        </Typography>\r\n                                    </CardContent>       \r\n                </Card>\r\n           <Card className={classes.card}>\r\n                    <CardContent>  \r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Total Blood Supply\r\n                                        </Typography>\r\n                                        <Typography variant=\"h3\" component=\"h2\">\r\n                                        {stats.totalSupply}\r\n                                        </Typography>\r\n                                    </CardContent>       \r\n                </Card>\r\n           {stats.bloods && <Card className={classes.card}>\r\n                    <CardContent>  \r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Verified Bloods\r\n                                        </Typography> \r\n                                        <Typography variant=\"h7\" component=\"h5\">\r\n                                         {stats.bloods.map((item,index) => {\r\n                                             return ''+ getBlooodGroup(index) + \" : \" + item + ' '\r\n                                         })}\r\n                                        </Typography>\r\n                                    </CardContent>       \r\n                </Card>}\r\n           </div>\r\n           <div className={classes.right}>\r\n                    <img src={DashBoardSVG} className={classes.imgSVG} />\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LogoImage from \"../assets/agency_doctor.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport {\r\n  BLOOD_BANK_ADDRESS,\r\n  BLOOD_BANK_ABI,\r\n  CONTRACT_OWNER,\r\n} from \"../SmartContractConfig.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  leftDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"90vh\",\r\n  },\r\n  rightDiv: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    justifyContent: \"space-between\",\r\n    height: \"80vh\",\r\n  },\r\n}));\r\n\r\nconst Deliver = ({ account }) => {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [PatientName, setPatientName] = useState(\"\");\r\n  const [PatientAge, setPatientAge] = useState(\"\");\r\n  const [PatientMedicalDetails, setPatientMedicalDetails] = useState(\"\");\r\n  const [PatientContactNo, setPatientContactNo] = useState(\"\");\r\n  const [Remarks, setRemarks] = useState(\"\");\r\n  const [Doctor, setDoctor] = useState(\"\");\r\n  const [agnecyIndex, setAgencyIndex] = useState(0);\r\n  const [healthCares, setHealthCares] = useState([]);\r\n\r\n  const isValid =\r\n    PatientName &&\r\n    PatientAge &&\r\n    PatientMedicalDetails &&\r\n    Remarks &&\r\n    Doctor &&\r\n    healthCares &&\r\n    PatientAge &&\r\n    PatientName.length > 2 &&\r\n    !isNaN(PatientContactNo) &&\r\n    PatientContactNo.length === 10 &&\r\n    !isNaN(PatientAge);\r\n\r\n  const markDeliverInBlock = () => {\r\n    if (isValid) {\r\n      console.log(\"Making delivery Blood\");\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n      bloodBankContract.defaultAccount = account;\r\n\r\n      // _Remarks:\r\n      // _PatientName:\r\n      // _PatientAge:\r\n      // _PatientMedicalDetails:\r\n      // _PatientContactNo:\r\n      // _doctorDetails:\r\n      // _DateDemanded:\r\n      // _DateProvided:\r\n      // _healthCareAgencyindex:\r\n\r\n      let publishDate = new Date().toLocaleDateString(); //web3.utils.fromAscii(docName)\r\n      //convert to better use\r\n      publishDate = window.web3.utils.fromAscii(publishDate);\r\n\r\n      try {\r\n        bloodBankContract.methods\r\n          .DeliverBloodBottle(\r\n            params.id,\r\n            params.gp,\r\n            window.web3.utils.fromAscii(Remarks),\r\n            window.web3.utils.fromAscii(PatientName),\r\n            PatientAge,\r\n            window.web3.utils.fromAscii(PatientMedicalDetails),\r\n            PatientContactNo,\r\n            Doctor,\r\n            publishDate,\r\n            publishDate,\r\n            agnecyIndex\r\n          )\r\n          .send({\r\n            from: account,\r\n          });\r\n\r\n        setMessage(\"Blood Delivered Successfully!\\nView it on Etherscan!\");\r\n\r\n        setTimeout(() => {\r\n          window.location = process.env.PUBLIC_URL + \"/#\" + \"/\";\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => getHealthCareList(), [account]);\r\n\r\n  const getHealthCareList = () => {\r\n    if (!account) return;\r\n\r\n    const bloodBankContract = new window.web3.eth.Contract(\r\n      BLOOD_BANK_ABI,\r\n      BLOOD_BANK_ADDRESS\r\n    );\r\n\r\n    bloodBankContract.defaultAccount = account;\r\n\r\n    bloodBankContract.methods\r\n      .HealthCareAgencyList(0)\r\n      .call()\r\n      .then((blockBloodDetails) => {\r\n        const bd_data = blockBloodDetails\r\n          .filter((bd) => bd.pincode !== \"0\")\r\n          .map((bd, index) => ({\r\n            agencyType: bd.agencyType,\r\n            agencyName: bd.agencyName,\r\n            contactPerson: bd.contactPerson,\r\n            contactNo: bd.contactNo,\r\n            agencyAddress: bd.agencyAddress,\r\n            pincode: bd.pincode,\r\n          }));\r\n\r\n        setHealthCares(bd_data);\r\n        console.log(blockBloodDetails);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onAgencySelect = (id) => {\r\n    if (id == -1) {\r\n      window.location = process.env.PUBLIC_URL + \"/#\" + \"/addhealthcare\";\r\n    } else {\r\n      setAgencyIndex(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.leftDiv}>\r\n        <img\r\n          src={LogoImage}\r\n          width=\"60%\"\r\n          height=\"60%\"\r\n          alt=\"Blood Donation Pic\"\r\n          style={{ marginTop: 30 }}\r\n        />\r\n      </div>\r\n      <div className={classes.rightDiv}>\r\n        {message && (\r\n          <Alert style={{ margin: 10 }} severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        <h3>Blood Delivery, Bottle Id : {params.id}</h3>\r\n        {account === CONTRACT_OWNER && (\r\n          <form className={classes.rightDiv} autoComplete=\"off\">\r\n            <TextField\r\n              required\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={PatientName}\r\n              onChange={(e) => setPatientName(e.currentTarget.value)}\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              id=\"age\"\r\n              label=\"Age\"\r\n              variant=\"outlined\"\r\n              value={PatientAge}\r\n              onChange={(e) => setPatientAge(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"mdc\"\r\n              label=\"Medical Details\"\r\n              variant=\"outlined\"\r\n              value={PatientMedicalDetails}\r\n              onChange={(e) => setPatientMedicalDetails(e.currentTarget.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"Contact_Number\"\r\n              label=\"Contact Number\"\r\n              variant=\"outlined\"\r\n              value={PatientContactNo}\r\n              onChange={(e) => setPatientContactNo(e.currentTarget.value)}\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              id=\"doctor_name\"\r\n              label=\"Doctor Name\"\r\n              variant=\"outlined\"\r\n              value={Doctor}\r\n              onChange={(e) => setDoctor(e.currentTarget.value)}\r\n            />\r\n\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Health Care\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={agnecyIndex}\r\n                onChange={(e) => {\r\n                  onAgencySelect(e.target.value);\r\n                }}\r\n                label=\"Health Care\"\r\n              >\r\n                {healthCares?.map((hd, index) => (\r\n                  <MenuItem value={index}>\r\n                    {hd.agencyName +\r\n                      \", \" +\r\n                      hd.agencyType +\r\n                      \", \" +\r\n                      hd.contactPerson +\r\n                      \", \" +\r\n                      hd.contactNo +\r\n                      \", \" +\r\n                      hd.agencyAddress +\r\n                      \", \" +\r\n                      hd.pincode}\r\n                  </MenuItem>\r\n                ))}\r\n\r\n                <MenuItem value={-1}>{\"Add New\"}</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              id=\"remarks\"\r\n              label=\"Remarks\"\r\n              variant=\"outlined\"\r\n              value={Remarks}\r\n              onChange={(e) => setRemarks(e.currentTarget.value)}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!isValid}\r\n              onClick={() => markDeliverInBlock()}\r\n            >\r\n              Deliver Bottle\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deliver;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getBloodStatus, getBlooodGroup } from \"../util/Util\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n//  [\r\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n// ]\r\nexport default function BasicTable({ data, verifyBottle }) {\r\n  const classes = useStyles();\r\n\r\n  const deliverBottle = (id, group) => {\r\n    window.location =\r\n      process.env.PUBLIC_URL + \"/#\" + \"/deliver/\" + id + \"/\" + group;\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Blood ID</TableCell>\r\n            <TableCell>Blood Group</TableCell>\r\n            <TableCell>Quality</TableCell>\r\n            <TableCell>Donar</TableCell>\r\n            <TableCell>Donar Age</TableCell>\r\n            <TableCell>Medical Details</TableCell>\r\n            <TableCell>Donar Contact No</TableCell>\r\n            <TableCell>Agency</TableCell>\r\n            <TableCell>Created</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.id}</TableCell>\r\n              <TableCell>{getBlooodGroup(row.bloodGroup)}</TableCell>\r\n              <TableCell>{row.Quality}</TableCell>\r\n              <TableCell>{row.Donar}</TableCell>\r\n              <TableCell>{row.age}</TableCell>\r\n              <TableCell>{row.md}</TableCell>\r\n              <TableCell>{row.ph}</TableCell>\r\n              <TableCell>{row.agency}</TableCell>\r\n              <TableCell>{row.created}</TableCell>\r\n              <TableCell>{getBloodStatus(row.status)}</TableCell>\r\n              <TableCell>\r\n                {row.status == 2 ? (\r\n                  <AssignmentTurnedInIcon style={{ cursor: \"pointer\" }} />\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    // href=\"#contained-buttons\"\r\n                    onClick={() =>\r\n                      row.status == 0\r\n                        ? verifyBottle(row.id)\r\n                        : deliverBottle(row.id, row.bloodGroup)\r\n                    }\r\n                  >\r\n                    {row.status == 0 ? \"Verify\" : \"Deliver\"}\r\n                  </Button>\r\n                )}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LogoImage from \"../assets/agency_doctor.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  BLOOD_BANK_ADDRESS,\r\n  BLOOD_BANK_ABI,\r\n  CONTRACT_OWNER,\r\n} from \"../SmartContractConfig.js\";\r\n\r\nimport { getBlooodGroup } from \"../util/Util\";\r\n\r\nimport Table from \"../Components/Table\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    margin: 20,\r\n    height: \"90vh\",\r\n  },\r\n  page: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: 100,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Collection = ({ account }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  // <TableCell>Blood ID</TableCell>\r\n  // <TableCell>Blood Group</TableCell>\r\n  // <TableCell>Quality</TableCell>\r\n  // <TableCell>Donar</TableCell>\r\n  // <TableCell>Donar Age</TableCell>\r\n  // <TableCell>Medical Details</TableCell>\r\n  // <TableCell>Donar Contact No</TableCell>\r\n  // <TableCell>Agency</TableCell>\r\n  // <TableCell>Created</TableCell>\r\n  // <TableCell>Status</TableCell>\r\n  // <TableCell>Actions</TableCell>\r\n  //BloodBottleList\r\n\r\n  const gotoLeft = () => {\r\n    if (page > 1) {\r\n      loadData(page - 1);\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n  const gotoRight = () => {\r\n    if (data.length === 10) {\r\n      loadData(page + 1);\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => loadData(1), [account]);\r\n\r\n  const loadData = (page) => {\r\n    console.log(\"Getting blood details\", page);\r\n    console.log(\"Account Details \", account);\r\n\r\n    if (page != null && !isNaN(page)) {\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n\r\n      bloodBankContract.defaultAccount = account;\r\n\r\n      bloodBankContract.methods\r\n        .BloodBottleList(page - 1)\r\n        .call()\r\n        .then((blockBloodDetails) => {\r\n          const bd_data = blockBloodDetails\r\n            .filter(\r\n              (bd) => bd.agency !== \"0x0000000000000000000000000000000000000000\"\r\n            )\r\n            .map((bd) => ({\r\n              id: bd.BloodBottleId,\r\n              bloodGroup: bd.BloodGroup,\r\n              Quality: window.web3.utils.toAscii(bd.Quality),\r\n              Donar: window.web3.utils.toAscii(bd.DonerName),\r\n              age: bd.DonerAge,\r\n              md: window.web3.utils.toAscii(bd.DonerMedicalDetails),\r\n              ph: bd.DonerContactNo,\r\n              agency: bd.agency,\r\n              created: window.web3.utils.toAscii(bd.DateCreated),\r\n              status: bd.Status,\r\n            }));\r\n\r\n          setData(bd_data);\r\n          console.log(blockBloodDetails);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const verifyBottle = (id) => {\r\n    console.log(\"Verifying blood details\", id);\r\n    if (id != null) {\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n      bloodBankContract.defaultAccount = account;\r\n      bloodBankContract.methods\r\n        .verifyBloodBottle(id)\r\n        .send({\r\n          from: account,\r\n        })\r\n        .then((blockBloodDetails) => {\r\n          console.log(\"Verified\");\r\n          loadData(page);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Table data={data} verifyBottle={verifyBottle} />\r\n      <div className={classes.page}>\r\n        <p onClick={() => gotoLeft()}>{\" << \"}</p>\r\n        <h3>{page}</h3>\r\n        <p onClick={() => gotoRight()}>{\" >> \"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getBloodStatus } from \"../util/Util\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n//  [\r\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n// ]\r\nexport default function BasicTable({ data, verifyBottle }) {\r\n  const classes = useStyles();\r\n\r\n  const deliverBottle = (id, group) => {\r\n    window.location =\r\n      process.env.PUBLIC_URL + \"/#\" + \"/deliver/\" + id + \"/\" + group;\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Index</TableCell>\r\n            <TableCell>HealthCare Name</TableCell>\r\n            <TableCell>HealthCare Type</TableCell>\r\n            <TableCell>Contact Person</TableCell>\r\n            <TableCell>Contact Number</TableCell>\r\n            <TableCell>Agency Address</TableCell>\r\n            <TableCell>Pincode</TableCell>\r\n\r\n            <TableCell>NoBottlesDemanded</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row, id) => (\r\n            <TableRow key={id}>\r\n              <TableCell>{id + 1}</TableCell>\r\n              <TableCell>{row.agencyName}</TableCell>\r\n              <TableCell>{row.agencyType}</TableCell>\r\n              <TableCell>{row.contactPerson}</TableCell>\r\n              <TableCell>{row.contactNo}</TableCell>\r\n              <TableCell>{row.agencyAddress}</TableCell>\r\n              <TableCell>{row.pincode}</TableCell>\r\n              <TableCell>{row.NoBottlesDemanded}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LogoImage from \"../assets/agency_doctor.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  BLOOD_BANK_ADDRESS,\r\n  BLOOD_BANK_ABI,\r\n  CONTRACT_OWNER,\r\n} from \"../SmartContractConfig.js\";\r\n\r\nimport { getBlooodGroup } from \"../util/Util\";\r\n\r\nimport DistributionTable from \"../Components/DistributionTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    margin: 20,\r\n    height: \"90vh\",\r\n  },\r\n  page: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: 100,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Distribution = ({ account }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  // <TableCell>Blood ID</TableCell>\r\n  // <TableCell>Blood Group</TableCell>\r\n  // <TableCell>Quality</TableCell>\r\n  // <TableCell>Donar</TableCell>\r\n  // <TableCell>Donar Age</TableCell>\r\n  // <TableCell>Medical Details</TableCell>\r\n  // <TableCell>Donar Contact No</TableCell>\r\n  // <TableCell>Agency</TableCell>\r\n  // <TableCell>Created</TableCell>\r\n  // <TableCell>Status</TableCell>\r\n  // <TableCell>Actions</TableCell>\r\n  //BloodBottleList\r\n\r\n  React.useEffect(() => loadData(1), [account]);\r\n\r\n  const loadData = (page) => {\r\n    console.log(\"Getting blood Distribution details\", page);\r\n    console.log(\"Account Details \", account);\r\n\r\n    if (account && page != null && !isNaN(page)) {\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n\r\n      bloodBankContract.defaultAccount = account;\r\n\r\n      bloodBankContract.methods\r\n        .HealthCareAgencyList(0)\r\n        .call()\r\n        .then((blockBloodDetails) => {\r\n          const bd_data = blockBloodDetails\r\n            .filter((bd) => bd.pincode !== \"0\")\r\n            .map((bd, index) => ({\r\n              agencyType: bd.agencyType,\r\n              agencyName: bd.agencyName,\r\n              contactPerson: bd.contactPerson,\r\n              contactNo: bd.contactNo,\r\n              agencyAddress: bd.agencyAddress,\r\n              pincode: bd.pincode,\r\n              NoBottlesDemanded: bd.NoBottlesDemanded,\r\n            }));\r\n\r\n          setData(bd_data);\r\n          console.log(blockBloodDetails);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const verifyBottle = (id) => {\r\n    console.log(\"Verifying blood details\", id);\r\n    if (id != null) {\r\n      const bloodBankContract = new window.web3.eth.Contract(\r\n        BLOOD_BANK_ABI,\r\n        BLOOD_BANK_ADDRESS\r\n      );\r\n      bloodBankContract.defaultAccount = account;\r\n      bloodBankContract.methods\r\n        .verifyBloodBottle(id)\r\n        .send({\r\n          from: account,\r\n        })\r\n        .then((blockBloodDetails) => {\r\n          console.log(\"Verified\");\r\n          loadData(page);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <DistributionTable data={data} verifyBottle={verifyBottle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Distribution;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport Home from \"./Pages/Home\";\r\nimport About from \"./Pages/About\";\r\nimport Navigations from \"./Pages/Navigations\";\r\nimport BloodRegistration from \"./Pages/BloodRegistration\";\r\nimport Developer from \"./Pages/Developer\";\r\nimport AddAgency from \"./Pages/AddAgency\";\r\nimport AddHealthCare from \"./Pages/AddHealthCare\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\nimport Deliver from \"./Pages/Deliver\";\r\nimport Collection from \"./Pages/Collection\";\r\nimport Distribution from \"./Pages/Distribution\";\r\nimport React from \"react\";\r\nimport { CONTRACT_OWNER } from \"./SmartContractConfig\";\r\n\r\n//web3 set up\r\nimport Web3 from \"web3\";\r\n\r\nfunction App() {\r\n  const [account, setAccount] = React.useState(\"\");\r\n\r\n  const ethEnabled = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        await window.ethereum.send(\"eth_requestAccounts\");\r\n        window.web3 = new Web3(window.ethereum);\r\n        const accounts = await window.web3.eth.getAccounts();\r\n        setAccount(accounts[0]);\r\n        return true;\r\n      } catch (error) {\r\n        console.log(\"Error : \", error);\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!ethEnabled()) {\r\n      alert(\"Please Install A Ethereum Wallet!\");\r\n    }\r\n  }, []);\r\n\r\n  console.log(\"Account : \", account);\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        background: \"red\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n          marginRight: 100,\r\n        }}\r\n      >\r\n        <Navigations isOwner={account === CONTRACT_OWNER} />\r\n      </div>\r\n\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/registration\">\r\n            <BloodRegistration account={account} />\r\n          </Route>\r\n          <Route path=\"/developer\">\r\n            <Developer />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/addagency\">\r\n            <AddAgency account={account} />\r\n          </Route>\r\n          <Route path=\"/addhealthcare\">\r\n            <AddHealthCare account={account} />\r\n          </Route>\r\n          <Route path=\"/stats\">\r\n            <Dashboard account={account} />\r\n          </Route>\r\n          <Route path=\"/deliver/:id/:gp\">\r\n            <Deliver account={account} />\r\n          </Route>\r\n          <Route path=\"/collection\">\r\n            <Collection account={account} />\r\n          </Route>\r\n          <Route path=\"/distribution\">\r\n            <Distribution account={account} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home account={account} />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}