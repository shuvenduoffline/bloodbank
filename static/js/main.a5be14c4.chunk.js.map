{"version":3,"sources":["assets/blood_donation1.svg","SmartContractConfig.js","Pages/Home.js","Pages/About.js","Components/NavItem.js","Pages/Navigations.js","assets/blood_donation2.svg","Pages/BloodRegistration.js","Pages/Developer.js","assets/agency_doctor.svg","Pages/AddAgency.js","App.js","reportWebVitals.js","index.js"],"names":["BLOOD_BANK_ADDRESS","BLOOD_BANK_ABI","CONTRACT_OWNER","useStyles","makeStyles","theme","root","padding","display","alignItems","width","marginTop","input","marginLeft","spacing","flex","iconButton","container","flexDirection","margin","leftDiv","justifyContent","rightDiv","height","heading","color","details","card","minWidth","bullet","transform","title","fontSize","pos","marginBottom","Home","account","classes","React","useState","bottleId","setBottleId","error","setError","bloodDetails","setBloodDetails","message","setMessage","console","log","className","Paper","InputBase","placeholder","inputProps","onChange","e","currentTarget","value","IconButton","type","aria-label","onClick","bloodBankContract","window","web3","eth","Contract","defaultAccount","methods","getbloodBottleData","call","then","blockBloodDetails","catch","getBloodDetails","Alert","style","severity","Card","CardContent","Typography","variant","component","BloodBottleId","utils","toAscii","DonerName","DonerAge","DonerMedicalDetails","DonerContactNo","BloodGroup","Quality","Remarks","Status","CardActions","Button","verifyBloodBottle","send","from","verifyBottle","DeliverBloodBottle","markDeliveredBottle","src","LogoImage","About","menusItem","cursor","fontWeight","NavItem","name","path","onClickMenu","menus","Navigations","navigateToPath","location","process","alignContent","marginRight","BloodRegistration","donarName","setDonarName","donarPhone","setDonarPhone","bloodGroup","setBloodGroup","bloodQuality","setQloodQuality","remarks","setRemarks","medicalDetails","setMedicalDetails","age","setage","isValid","alt","autoComplete","TextField","required","id","label","disabled","publishDate","Date","toLocaleDateString","fromAscii","_bloodGroup","_bloodQuality","_remarks","_donarName","_medicalDetails","setTimeout","regiterBlood","Developer","minHeight","AddAgency","agencyType","setAgencyType","agencyName","setAgencyName","addressID","setAddressID","contact_Person","setContact_Person","contact_No","setContact_No","address_Line1","setAddress_Line1","pincode","setPincode","agencyData","setAgencyData","showAddAgency","setShowAddAgency","useEffect","loadAgencyDetails","acc","a","getAgencyData","addAgency","addAgencyToBlockChain","contactPerson","contactNo","agencyAddress","App","setAccount","ethEnabled","ethereum","Web3","getAccounts","accounts","alert","background","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5be14c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blood_donation1.3b79b00a.svg\";","export const BLOOD_BANK_ADDRESS = '0xAC23538589b31AE5715EBff6D8e1b8Ff5b19A091'\r\n\r\nexport const BLOOD_BANK_ABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"BloodBottleStatusEvent\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_BloodBottleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"DeliverBloodBottle\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_agencyType\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_agencyName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addressID\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_contactPerson\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_contactNo\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_agencyAddress\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_pincode\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addAgency\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"agencyCollection\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"agencyType\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"agencyName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"addressID\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"contactPerson\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"contactNo\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"agencyAddress\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"pincode\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"bloodsCollection\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"BloodGroup\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"Quality\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"Remarks\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"DonerName\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"DonerAge\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"DonerMedicalDetails\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"DonerContactNo\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"BloodBottleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"enum BoodBank.BloodBottleStatus\",\r\n\t\t\t\t\"name\": \"Status\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"DateCreated\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"DateUpdated\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addressID\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAgencyData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"agencyType\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"agencyName\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"addressID\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"contactPerson\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"contactNo\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"agencyAddress\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"pincode\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct BoodBank.Agency\",\r\n\t\t\t\t\"name\": \"agency\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_BloodBottleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getbloodBottleData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"BloodGroup\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"Quality\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"Remarks\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"DonerName\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"DonerAge\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"DonerMedicalDetails\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"DonerContactNo\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"BloodBottleId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"enum BoodBank.BloodBottleStatus\",\r\n\t\t\t\t\t\t\"name\": \"Status\",\r\n\t\t\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"DateCreated\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\t\t\"name\": \"DateUpdated\",\r\n\t\t\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct BoodBank.BloodBottle\",\r\n\t\t\t\t\"name\": \"_bloodBottle\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_BloodGroup\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_Quality\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_Remarks\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_DonerName\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_DonerAge\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_DonerMedicalDetails\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_DonerContactNo\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_BloodBottleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_DateCreated\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"_DateUpdated\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setBloodDetails\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_BloodBottleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"verifyBloodBottle\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\n\r\nexport const CONTRACT_OWNER = '0x1142F4720cE7CCDA94E3aa2FD563Af2A371110Cd'","import React from 'react';\r\nimport LogoImage from '../assets/blood_donation1.svg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI} from '../SmartContractConfig.js'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n      marginTop: 50\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    container : {display : 'flex', flexDirection: 'row', margin: 20, padding: 20, width: '100%'},\r\n    leftDiv :  { display: 'flex', flexDirection: 'column', alignItems : 'center', justifyContent: 'flex-start', width : '40%'},\r\n    rightDiv : { width : '60%' , height : '100%'},\r\n    heading : {margin : 2, color: 'white'},\r\n    details : {color : 'white'},\r\n    card: {\r\n        minWidth: 500,\r\n        marginTop: 30\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n  }));\r\n\r\nconst Home = ({account}) => {\r\n\r\n    const classes = useStyles();\r\n    const [bottleId, setBottleId] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    const [bloodDetails, setBloodDetails] = React.useState();\r\n    const [message,setMessage] = React.useState('');\r\n\r\n\r\n    // {\r\n    //     BloodBottleId : 125,\r\n    //     DonerName : 'Shuvendu Dhal',\r\n    //     DonerAge : 25,\r\n    //     DonerMedicalDetails : 'Very Good',\r\n    //     DonerContactNo : '8158090295',\r\n    //     BloodGroup : 'O+',\r\n    //     Quality : 'Good',\r\n    //     Remarks : 'Very Very Good'\r\n    // }\r\n\r\n    console.log('Account Home : ', account);\r\n    //get blood details\r\n    const getBloodDetails = (bottleId) => {\r\n        console.log('Getting blood details' , bottleId)\r\n        if(bottleId != null){\r\n            setBloodDetails(null);\r\n            setError(null);\r\n            setMessage('')\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.getbloodBottleData(bottleId)\r\n            .call()\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails(blockBloodDetails);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n    const verifyBottle = (bottleId) => {\r\n        console.log('Verifying blood details' , bottleId)\r\n        if(bottleId != null){\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.verifyBloodBottle(bottleId)\r\n            .send({\r\n                from: account\r\n            })\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails({...bloodDetails, Status : '1'})\r\n                setMessage(\"Blood Bottle Verified!\")\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n    const markDeliveredBottle = (bottleId) => {\r\n        console.log('Delivering blood details' , bottleId)\r\n        if(bottleId != null){\r\n            const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n            bloodBankContract.defaultAccount = account;\r\n            bloodBankContract.methods.DeliverBloodBottle(bottleId)\r\n            .send({\r\n                from: account\r\n            })\r\n            .then(blockBloodDetails => {\r\n                console.log(blockBloodDetails);\r\n                setBloodDetails({...bloodDetails, Status : '2'})\r\n                setMessage(\"Blood Bottle Marked Delivered!\")\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setError(error.message)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.leftDiv}>\r\n                <h2 className={classes.heading}>Blood Bank</h2>\r\n                <p className={classes.details}>New Generations Blood Bank powered by decentralize blockchain solution. Build in Ethereum Network. Blood Collect to Blood Verification, Distribution all done with fully decentralized system. </p>\r\n                <Paper  className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search Blood Details With Blood Id\"\r\n                        inputProps={{ 'aria-label': 'Search Blood Details With Blood Id' }}\r\n                        onChange={e => setBottleId(e.currentTarget.value)}\r\n                    />\r\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick={() => getBloodDetails(bottleId)}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n\r\n                {error && <p>{error}</p>}\r\n                {message && <Alert style={{margin: 10}} severity=\"success\">{message}</Alert>}\r\n                            {bloodDetails && <Card className={classes.card}>\r\n                                    <CardContent>\r\n                                        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Word of the Day\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Blood Id : {bloodDetails.BloodBottleId}\r\n                                        </Typography>\r\n                                        {/* <Typography color=\"textSecondary\">\r\n                                        adjective\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                        Doner Name : {window.web3.utils.toAscii(bloodDetails.DonerName)}\r\n                                        <br />\r\n                                        Age : {bloodDetails.DonerAge}\r\n                                        <br />\r\n                                        Medical Details : {window.web3.utils.toAscii(bloodDetails.DonerMedicalDetails)}\r\n                                        <br />\r\n                                        Phone Number : {bloodDetails.DonerContactNo}\r\n                                        <br />\r\n                                        Blood Group : {window.web3.utils.toAscii(bloodDetails.BloodGroup)}\r\n                                        <br />\r\n                                        Blood Quality : {window.web3.utils.toAscii(bloodDetails.Quality)}\r\n                                        <br />\r\n                                        Remarks : {window.web3.utils.toAscii(bloodDetails.Remarks)}\r\n                                        <br />\r\n                                        Status : {bloodDetails.Status === '1' ? 'Verified' : bloodDetails.Status === '2' ? 'Delivered' : 'New'}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        {bloodDetails.Status === '0' ? <Button onClick={() => verifyBottle(bottleId)}>Verify</Button> : bloodDetails.Status === '1' ? <Button onClick={() => markDeliveredBottle(bottleId)}>Mark Delivered</Button> : null}\r\n                                    </CardActions>\r\n                </Card>}\r\n            </div>\r\n            <div  className={classes.rightDiv}>\r\n                <img src={LogoImage} width='100%' height='100%' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 10,\r\n        width: 500,\r\n        alignItems: 'end'\r\n    }\r\n  }));\r\n\r\nconst About = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n        className={classes.root}\r\n        >\r\n           About\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menusItem : {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        fontWeight: 'bolder'\r\n    }\r\n  }));\r\n\r\nconst NavItem = ({name, path, onClickMenu}) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.menusItem}\r\n        onClick={() => onClickMenu(path)}\r\n        >\r\n            {name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport NavItem from '../Components/NavItem'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menus: {\r\n        display : 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 10,\r\n        width: 500,\r\n        alignItems: 'end'\r\n    }\r\n  }));\r\n\r\nconst Navigations = () => {\r\n    const classes = useStyles();\r\n\r\n    const navigateToPath = path => {\r\n        if(path === '/about'){\r\n            window.location = 'https://github.com/shuvenduoffline'\r\n        }else{\r\n            window.location = process.env.PUBLIC_URL + path;\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n        <div\r\n        className={classes.menus}\r\n        >\r\n            <NavItem name={'Home'} onClickMenu={navigateToPath} path={'/'}/>\r\n            <NavItem name={'Blood Registration'} onClickMenu={navigateToPath} path={'/registration'}/>\r\n            <NavItem name={'Agency'} onClickMenu={navigateToPath} path={'/addagency'}/>\r\n            <NavItem name={'About Us'} onClickMenu={navigateToPath} path={'/about'}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigations;\r\n","export default __webpack_public_path__ + \"static/media/blood_donation2.841028d5.svg\";","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LogoImage from '../assets/blood_donation2.svg'\r\nimport Button from '@material-ui/core/Button';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI} from '../SmartContractConfig.js'\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 20\r\n      },\r\n      leftDiv : {\r\n         width: '100%',\r\n         alignItems : 'center',\r\n         height: '90vh'\r\n      },\r\n      rightDiv : {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        justifyContent: 'space-between',\r\n        height: '80vh'\r\n      }\r\n  }));\r\n\r\nconst BloodRegistration = ({account}) => {\r\n\r\n    const classes = useStyles();\r\n    const [donarName,setDonarName] = useState('')\r\n    const [donarPhone,setDonarPhone] = useState('')\r\n    const [bloodGroup,setBloodGroup] = useState('')\r\n    const [bloodQuality,setQloodQuality] = useState('')\r\n    const [remarks,setRemarks] = useState('')\r\n    const [medicalDetails,setMedicalDetails] = useState('')\r\n    const [age,setage] = useState('')\r\n    const [bottleId,setBottleId] = useState('')\r\n    const [message,setMessage] = useState('')\r\n\r\n    const isValid = donarName && donarPhone && bloodGroup && bloodQuality && remarks && medicalDetails && age && bottleId\r\n\r\n\r\n    const regiterBlood = () => {\r\n        if(isValid){        \r\n        let publishDate = new Date().toLocaleDateString(); //web3.utils.fromAscii(docName)\r\n         //convert to better use\r\n         publishDate = window.web3.utils.fromAscii(publishDate);\r\n         const _bloodGroup = window.web3.utils.fromAscii(bloodGroup);\r\n         const _bloodQuality = window.web3.utils.fromAscii(bloodQuality);\r\n         const _remarks = window.web3.utils.fromAscii(remarks);\r\n         const _donarName = window.web3.utils.fromAscii(donarName);\r\n         const _medicalDetails = window.web3.utils.fromAscii(medicalDetails);\r\n\r\n         console.log(\"Adding Blood\");\r\n         const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n         bloodBankContract.defaultAccount = account;\r\n \r\n         try{\r\n             bloodBankContract.methods.setBloodDetails(\r\n                 _bloodGroup,\r\n                 _bloodQuality,\r\n                 _remarks,\r\n                 _donarName,\r\n                age,\r\n                _medicalDetails,\r\n                donarPhone,\r\n                bottleId,\r\n                publishDate,\r\n                publishDate\r\n             )\r\n             .send({\r\n                 from: account\r\n             })\r\n \r\n             setMessage('Blood Registered Successfully!\\nView it on Etherscan!');\r\n \r\n             setTimeout(()=> {\r\n                 window.location = '/';\r\n             },2000)\r\n \r\n         }catch(error){\r\n             console.log(error)\r\n         }\r\n        }\r\n     }\r\n    \r\n    return (\r\n        <div className={classes.root}\r\n        >\r\n           <div className={classes.leftDiv}>\r\n            <img src={LogoImage} width='100%' height='100%' alt='Blood Donation Pic' />\r\n           </div>\r\n           <div className={classes.rightDiv}>\r\n           {message && <Alert style={{margin: 10}} severity=\"success\">{message}</Alert>}\r\n           <form className={classes.rightDiv} autoComplete=\"off\">\r\n               \r\n                    <TextField\r\n                        required\r\n                        id=\"name\"\r\n                        label=\"Donar Name\"\r\n                        variant=\"outlined\"\r\n                        value={donarName}\r\n                        onChange={e => setDonarName(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"phone\"\r\n                        label=\"Phone Number\"\r\n                        variant=\"outlined\"\r\n                        value={donarPhone}\r\n                        onChange={e => setDonarPhone(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"bloodgroup\"\r\n                        label=\"Blood Group\"\r\n                        variant=\"outlined\"\r\n                        value={bloodGroup}\r\n                        onChange={e => setBloodGroup(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"quality\"\r\n                        label=\"Blood Quality\"\r\n                        variant=\"outlined\"\r\n                        value={bloodQuality}\r\n                        onChange={e => setQloodQuality(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"medical\"\r\n                        label=\"Medical Details\"\r\n                        variant=\"outlined\"\r\n                        value={medicalDetails}\r\n                        onChange={e => setMedicalDetails(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"age\"\r\n                        label=\"Age\"\r\n                        variant=\"outlined\"\r\n                        value={age}\r\n                        onChange={e => setage(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"bottleId\"\r\n                        label=\"Bottle Id\"\r\n                        variant=\"outlined\"\r\n                        value={bottleId}\r\n                        onChange={e => setBottleId(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"remarks\"\r\n                        label=\"Remarks\"\r\n                        variant=\"outlined\"\r\n                        value={remarks}\r\n                        onChange={e => setRemarks(e.currentTarget.value)}\r\n                    />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" disabled={!isValid} onClick={() => regiterBlood()}>\r\n                Register Blood\r\n            </Button>\r\n            </form>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BloodRegistration;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display : 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 10,\r\n        width: 500,\r\n        alignItems: 'end'\r\n    }\r\n  }));\r\n\r\nconst Developer = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n        className={classes.root}\r\n        >\r\n           Developer\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Developer;\r\n","export default __webpack_public_path__ + \"static/media/agency_doctor.4097dc4b.svg\";","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LogoImage from '../assets/agency_doctor.svg'\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BLOOD_BANK_ADDRESS,BLOOD_BANK_ABI, CONTRACT_OWNER} from '../SmartContractConfig.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 20\r\n      },\r\n      leftDiv : {\r\n         width: '100%',\r\n         alignItems : 'center',\r\n         height: '90vh',\r\n      },\r\n      rightDiv : {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        justifyContent: 'space-between',\r\n        height: '80vh'\r\n      },\r\n      card: {\r\n        minWidth: 500,\r\n        marginTop: 30,\r\n        minHeight: 250\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n  }));\r\n\r\nconst AddAgency = ({account}) => {\r\n\r\n    // agency.agencyType=_agencyType;\r\n    // agency.agencyName = _agencyName;\r\n    // agency.addressID = _addressID;\r\n    // agency.contact_Person = _contact_Person;\r\n    // agency.contact_No = _contact_No;\r\n    // agency.address_Line1 = _address_Line1;\r\n    // agency.address_Line2 =_address_Line2;\r\n    // agency.pincode =_pincode;\r\n\r\n    const classes = useStyles();\r\n    const [agencyType,setAgencyType] = useState('')\r\n    const [agencyName,setAgencyName] = useState('')\r\n    const [addressID,setAddressID] = useState('')\r\n    const [contact_Person,setContact_Person] = useState('')\r\n    const [contact_No,setContact_No] = useState('')\r\n    const [address_Line1,setAddress_Line1] = useState('')\r\n    const [pincode,setPincode] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    const [agencyData,setAgencyData] = useState('')\r\n    const [showAddAgency,setShowAddAgency] = useState(false)\r\n\r\n\r\n\r\n    const isValid = agencyType && agencyName && addressID && contact_Person && contact_No && address_Line1 && pincode\r\n\r\n    \r\n\r\n    const addAgencyToBlockChain = () => {\r\n       if(isValid){        \r\n        //    let publishDate = new Date().toLocaleDateString(); //web3.utils.fromAscii(docName)\r\n        // //convert to better use\r\n        // publishDate = window.web3.utils.fromAscii(publishDate);\r\n        // const _bloodGroup = window.web3.utils.fromAscii(bloodG);\r\n        // const doc_id = window.web3.utils.fromAscii(docID);\r\n        console.log(\"Adding Agecy\");\r\n        const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n        bloodBankContract.defaultAccount = account;\r\n\r\n        try{\r\n            bloodBankContract.methods.addAgency(\r\n                agencyType,\r\n                agencyName,\r\n                addressID,\r\n                contact_Person,\r\n                contact_No,\r\n                address_Line1,\r\n                pincode\r\n            )\r\n            .send({\r\n                from: account\r\n            })\r\n\r\n            setMessage('Added Agency Details Successfully!\\nView it on Etherscan!');\r\n\r\n            setTimeout(()=> {\r\n                window.location = '/';\r\n            },2000)\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n       }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        loadAgencyDetails(account)\r\n    },[account])\r\n\r\n    const loadAgencyDetails =async (acc) => {\r\n        console.log('Acc : '+acc)\r\n        if(acc){\r\n            try{\r\n                const bloodBankContract = new window.web3.eth.Contract(BLOOD_BANK_ABI, BLOOD_BANK_ADDRESS)\r\n                bloodBankContract.defaultAccount = acc;\r\n                bloodBankContract.methods.getAgencyData(\r\n                   acc\r\n                )\r\n                .call()\r\n                .then(agencyData => {\r\n                    console.log(agencyData)\r\n                   setAgencyData(agencyData)\r\n                })\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className={classes.root}\r\n        >\r\n           <div className={classes.leftDiv}>\r\n            <img src={LogoImage} width='60%' height='60%' alt='Blood Donation Pic' style={{marginTop : 30}} />\r\n           </div>\r\n           <div className={classes.rightDiv}>\r\n           {message && <Alert style={{margin: 10}} severity=\"success\">{message}</Alert>}\r\n           {account === CONTRACT_OWNER && showAddAgency ? <form className={classes.rightDiv} autoComplete=\"off\">\r\n               \r\n                    <TextField\r\n                        required\r\n                        id=\"name\"\r\n                        label=\"Agency Name\"\r\n                        variant=\"outlined\"\r\n                        value={agencyName}\r\n                        onChange={e => setAgencyName(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agencytype\"\r\n                        label=\"Agency Type\"\r\n                        variant=\"outlined\"\r\n                        value={agencyType}\r\n                        onChange={e => setAgencyType(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_address\"\r\n                        label=\"Agency Address\"\r\n                        variant=\"outlined\"\r\n                        value={addressID}\r\n                        onChange={e => setAddressID(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"contact_person\"\r\n                        label=\"Contact Person\"\r\n                        variant=\"outlined\"\r\n                        value={contact_Person}\r\n                        onChange={e => setContact_Person(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"contact_number\"\r\n                        label=\"Contact Number\"\r\n                        variant=\"outlined\"\r\n                        value={contact_No}\r\n                        onChange={e => setContact_No(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_address\"\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n                        value={address_Line1}\r\n                        onChange={e => setAddress_Line1(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        id=\"agency_pincode\"\r\n                        label=\"Pincode\"\r\n                        variant=\"outlined\"\r\n                        value={pincode}\r\n                        onChange={e => setPincode(e.currentTarget.value)}\r\n                    />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" disabled={!isValid} onClick={() => addAgencyToBlockChain()}>\r\n                Add Agency\r\n            </Button>\r\n            </form> : <Card className={classes.card}>\r\n                                    <CardContent>\r\n                                        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Word of the Day\r\n                                        </Typography> */}\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                         Agency Name : {agencyData.agencyName}\r\n                                        </Typography>\r\n                                       \r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                        Agency Type : {agencyData.agencyType}\r\n                                        <br />\r\n                                        Address  : {agencyData.addressID}\r\n                                        <br />\r\n                                        Contact Person : {agencyData.contactPerson}\r\n                                        <br />\r\n                                        Contact Number : {agencyData.contactNo}\r\n                                        <br />\r\n                                        Agency Address : {agencyData.agencyAddress}\r\n                                        <br />\r\n                                        Pincode : {agencyData.pincode}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                       {account === CONTRACT_OWNER && <Button onClick={() => setShowAddAgency(true)}>Add Agency</Button> }\r\n                                    </CardActions>\r\n                </Card>}\r\n           </div>\r\n        </div>\r\n    );\r\n\r\n//     addressID: \"0x1142F4720cE7CCDA94E3aa2FD563Af2A371110Cd\"\r\n// ​\r\n// agencyAddress: \"Rajabazar, Kolkata\"\r\n// ​\r\n// agencyName: \"Vein Care\"\r\n// ​\r\n// agencyType: \"Blood Center\"\r\n// ​\r\n// contactNo: \"1234567899\"\r\n// ​\r\n// contactPerson: \"Shuvendu Dhal\"\r\n// ​\r\n// length: 7\r\n// ​\r\n// pincode: \"700009\"\r\n}\r\n\r\nexport default AddAgency;","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { HashRouter} from \"react-router-dom\";\r\n\r\nimport Home from './Pages/Home'\r\nimport About from './Pages/About'\r\nimport Navigations from './Pages/Navigations'\r\nimport BloodRegistration from './Pages/BloodRegistration'\r\nimport Developer from './Pages/Developer'\r\nimport AddAgency from './Pages/AddAgency'\r\nimport React from 'react';\r\n\r\n//web3 set up\r\nimport Web3 from 'web3'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [account , setAccount ] = React.useState('');\r\n\r\n  const ethEnabled = async () => {  \r\n    if (window.ethereum) {    \r\n      try{\r\n        await window.ethereum.send('eth_requestAccounts');\r\n        window.web3 = new Web3(window.ethereum);\r\n        const accounts = await window.web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        return true;  \r\n      }catch(error){\r\n        console.log('Error : ', error)\r\n          return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(!ethEnabled()){\r\n      alert('Please Install A Ethereum Wallet!')\r\n    }\r\n  },[])\r\n\r\n  console.log('Account : ',account)\r\n\r\n  return (\r\n    <div className=\"App\" style={{ background : 'red', width : '100vw', height: '100vh', overflow: 'hidden'}}>\r\n      <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-end', marginRight: 100}}>\r\n          <Navigations />\r\n      </div>\r\n        \r\n      \r\n         <HashRouter>\r\n            <Switch>\r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/registration\">\r\n                <BloodRegistration\r\n                 account={account}\r\n                />\r\n              </Route>\r\n              <Route path=\"/developer\">\r\n                <Developer />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/addagency\">\r\n                <AddAgency \r\n                 account={account}\r\n                />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home \r\n                account={account}\r\n                />\r\n              </Route>\r\n            </Switch>\r\n    </HashRouter>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}